<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>dibujados</parentName>
  <maskName>base_unidades</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tipo;//0:reorganiza, 1:nvl0, 2:nvl1, 3:nvl2, 4:nvl3, 5:nvl4, 6:nvl5, 7:nvl6, 8:puntos
depth=y*-10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_released(vk_enter)){
    if(distance_to_object(unidad)&lt;16){
        switch(tipo){
            case 0: unidad.x=unidad.xstart; unidad.y=unidad.ystart;
                with(bloque){
                    if((x&lt;ancho*12-8 and x&gt;8)and (y&lt;alto*12+52 and y&gt;68)){
                        instance_destroy();}}
                with(decorado){instance_destroy();}
                with(bichin){instance_destroy();}
                recreando_mundo(); break;
            case 1: unidad.x=unidad.xstart; unidad.y=unidad.ystart;
                unidad.municion=10; unidad.estado=2; unidad.celebra=0;
                exterminio(1);
                with(opciones){instance_destroy();} break;
            case 2: if(control.avance&gt;0){
                unidad.x=unidad.xstart; unidad.y=unidad.ystart;
                unidad.municion=10; unidad.estado=2; unidad.celebra=0;
                exterminio(2);
                with(opciones){instance_destroy();}} break;
            case 3: if(control.avance&gt;1){
                unidad.x=unidad.xstart; unidad.y=unidad.ystart;
                unidad.municion=10; unidad.estado=2; unidad.celebra=0;
                exterminio(3);
                with(opciones){instance_destroy();}} break;
            case 4: if(control.avance&gt;2){
                unidad.x=unidad.xstart; unidad.y=unidad.ystart;
                unidad.municion=10; unidad.estado=2; unidad.celebra=0;
                exterminio(4);
                with(opciones){instance_destroy();}} break;
            case 5: if(control.avance&gt;3){
                unidad.x=unidad.xstart; unidad.y=unidad.ystart;
                unidad.municion=10; unidad.estado=2; unidad.celebra=0;
                exterminio(5);
                with(opciones){instance_destroy();}} break;
            case 6: if(control.avance&gt;4){
                unidad.x=unidad.xstart; unidad.y=unidad.ystart;
                unidad.municion=10; unidad.estado=2; unidad.celebra=0;
                exterminio(6);
                with(opciones){instance_destroy();}} break;
            case 7: if(control.avance&gt;5){
                unidad.x=unidad.xstart; unidad.y=unidad.ystart;
                unidad.municion=10; unidad.estado=2; unidad.celebra=0;
                exterminio(7);
                with(opciones){instance_destroy();}} break;
            case 8: unidad.x=unidad.xstart; unidad.y=unidad.ystart;
                unidad.municion=10; unidad.estado=2; unidad.celebra=0;
                chumbimba();
                with(opciones){instance_destroy();} break;}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sombras,0,x,y);

switch(tipo){
    case 0: if(distance_to_object(unidad)&lt;16){draw_sprite(d_opciones,15,x,y);}
        draw_sprite(d_opciones,0,x,y); break;
    case 1: if(distance_to_object(unidad)&lt;16){draw_sprite(d_opciones,16,x,y);}
        draw_sprite(d_opciones,1,x,y); break;
    case 2: if(control.avance&gt;0){
            if(distance_to_object(unidad)&lt;16){draw_sprite(d_opciones,16,x,y);}
            draw_sprite(d_opciones,2,x,y);}
        else{draw_sprite(d_opciones,3,x,y);} break;
    case 3: if(control.avance&gt;1){
            if(distance_to_object(unidad)&lt;16){draw_sprite(d_opciones,16,x,y);}
            draw_sprite(d_opciones,4,x,y);}
        else{draw_sprite(d_opciones,5,x,y);} break;
    case 4: if(control.avance&gt;2){
            if(distance_to_object(unidad)&lt;16){draw_sprite(d_opciones,16,x,y);}
            draw_sprite(d_opciones,6,x,y);}
        else{draw_sprite(d_opciones,7,x,y);} break;
    case 5: if(control.avance&gt;3){
            if(distance_to_object(unidad)&lt;16){draw_sprite(d_opciones,16,x,y);}
            draw_sprite(d_opciones,8,x,y);}
        else{draw_sprite(d_opciones,9,x,y);} break;
    case 6: if(control.avance&gt;4){
            if(distance_to_object(unidad)&lt;16){draw_sprite(d_opciones,16,x,y);}
            draw_sprite(d_opciones,10,x,y);}
        else{draw_sprite(d_opciones,11,x,y);} break;
    case 7: if(control.avance&gt;5){
            if(distance_to_object(unidad)&lt;16){draw_sprite(d_opciones,16,x,y);}
            draw_sprite(d_opciones,12,x,y);}
        else{draw_sprite(d_opciones,13,x,y);} break;
    case 8: if(distance_to_object(unidad)&lt;16){draw_sprite(d_opciones,17,x,y);}
        draw_sprite(d_opciones,14,x,y); break;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
